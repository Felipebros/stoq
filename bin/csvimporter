#!/usr/bin/env python
# -*- Mode: Python; coding: utf-8 -*-
# vi:si:et:sw=4:sts=4:ts=4

##
## Copyright (C) 2007 Async Open Source <http://www.async.com.br>
## All rights reserved
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., or visit: http://www.gnu.org/.
##
## Author(s):   Johan Dahlin                <jdahlin@async.com.br>
##

import sys

from stoqlib.database.admin import get_admin_user
from stoqlib.database.interfaces import ICurrentUser
from stoqlib.database.runtime import get_default_store
from stoqlib.importers.importer import get_by_type
from stoqlib.lib.component import provide_utility
from stoqlib.lib.configparser import StoqConfig

from stoq.lib.options import get_option_parser
from stoq.lib.startup import setup

def main(args):
    parser = get_option_parser()
    parser.add_option('-t', '--type',
                      action="store",
                      dest="type")

    options, args = parser.parse_args(args)

    if not options.type:
        raise SystemExit("Need an importer type")

    if len(args) < 2:
        raise SystemExit("Need a filename")

    config = StoqConfig()
    config.load_default()
    setup(config, options, register_station=False, check_schema=False)

    default_store = get_default_store()
    provide_utility(ICurrentUser, get_admin_user(default_store))

    importer = get_by_type(options.type)
    importer.feed_file(args[1])
    importer.process()

if __name__ == '__main__':
    sys.exit(main(sys.argv))
